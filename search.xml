<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/11/21/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/11/21/%E6%8E%A5%E5%8F%A3%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="接口测试"><a href="#接口测试" class="headerlink" title="接口测试"></a>接口测试</h1><p>使用Postman工具来进行接口测试，以2023年全国职业院校技能大赛软件测试赛题第一套的接口测试题为例子进行接口测试：</p><p>由于没有现成的Api接口平台来用作测试平台，所以要借用Postman工具中的Mock来搭建一个Api临时的接口测试平台</p><h2 id="题目一-登录接口脚本编写和执行测试"><a href="#题目一-登录接口脚本编写和执行测试" class="headerlink" title="题目一:登录接口脚本编写和执行测试"></a>题目一:登录接口脚本编写和执行测试</h2><h3 id="题目要求："><a href="#题目要求：" class="headerlink" title="题目要求："></a>题目要求：</h3><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/1.png">https://raw.gitmirror.com/alonelovely/image/master/postman/1.png</a></p><h3 id="测试阶段："><a href="#测试阶段：" class="headerlink" title="测试阶段："></a>测试阶段：</h3><h4 id="1-在Postman中新建Collections集，测试集命名为Data-Driver"><a href="#1-在Postman中新建Collections集，测试集命名为Data-Driver" class="headerlink" title="1.在Postman中新建Collections集，测试集命名为Data_Driver"></a>1.在Postman中新建Collections集，测试集命名为Data_Driver</h4><h4 id="2-在测试集Data-Driver下新建data-driver脚本"><a href="#2-在测试集Data-Driver下新建data-driver脚本" class="headerlink" title="2.在测试集Data_Driver下新建data_driver脚本"></a>2.在测试集Data_Driver下新建data_driver脚本</h4><h4 id="3-因为请求方式为POST，所以记得把默认的GET的请求改为POST请求并记得保存"><a href="#3-因为请求方式为POST，所以记得把默认的GET的请求改为POST请求并记得保存" class="headerlink" title="3.因为请求方式为POST，所以记得把默认的GET的请求改为POST请求并记得保存"></a>3.因为请求方式为POST，所以<strong>记得把默认的GET的请求改为POST请求并记得保存</strong></h4><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/2.png">https://raw.gitmirror.com/alonelovely/image/master/postman/2.png</a></p><h4 id="4-把”http-XX-XX-XX-XX-XXXX-prod-api-auth-login-quot-，填入URL框中-比赛时会给具体的测试地址"><a href="#4-把”http-XX-XX-XX-XX-XXXX-prod-api-auth-login-quot-，填入URL框中-比赛时会给具体的测试地址" class="headerlink" title="4.把”http://XX.XX.XX.XX:XXXX/prod-api/auth/login&quot;，填入URL框中(比赛时会给具体的测试地址)"></a>4.把”<a href="http://XX.XX.XX.XX:XXXX/prod-api/auth/login&quot;，填入URL框中(比赛时会给具体的测试地址">http://XX.XX.XX.XX:XXXX/prod-api/auth/login&quot;，填入URL框中(比赛时会给具体的测试地址</a>)</h4><h4 id="5-可忽略（这一点在比赛中不用搭建，比赛时会提供测试平台，这仅是为了练习而搭建）"><a href="#5-可忽略（这一点在比赛中不用搭建，比赛时会提供测试平台，这仅是为了练习而搭建）" class="headerlink" title="5.可忽略（这一点在比赛中不用搭建，比赛时会提供测试平台，这仅是为了练习而搭建）"></a>5.可忽略（这一点在比赛中不用搭建，比赛时会提供测试平台，这仅是为了练习而搭建）</h4><h4 id="https-raw-gitmirror-com-alonelovely-image-master-postman-3-png"><a href="#https-raw-gitmirror-com-alonelovely-image-master-postman-3-png" class="headerlink" title="https://raw.gitmirror.com/alonelovely/image/master/postman/3.png"></a><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/3.png">https://raw.gitmirror.com/alonelovely/image/master/postman/3.png</a></h4><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/4.png">https://raw.gitmirror.com/alonelovely/image/master/postman/4.png</a></p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/5.png">https://raw.gitmirror.com/alonelovely/image/master/postman/5.png</a></p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/6.png">https://raw.gitmirror.com/alonelovely/image/master/postman/6.png</a></p><h4 id="6-在脚本Body中的raw下新建json参数（username、password、roleId）进行传值，username和password进行参数化"><a href="#6-在脚本Body中的raw下新建json参数（username、password、roleId）进行传值，username和password进行参数化" class="headerlink" title="6.在脚本Body中的raw下新建json参数（username、password、roleId）进行传值，username和password进行参数化"></a>6.在脚本Body中的raw下新建json参数（username、password、roleId）进行传值，username和password进行参数化</h4><h5 id="1-可忽略-创建响应结果"><a href="#1-可忽略-创建响应结果" class="headerlink" title="1.(可忽略)创建响应结果"></a>1.(可忽略)创建响应结果</h5><p>因为没有真实的测试平台没有响应结果，所以运行之后无法判断是否正确所以先创建响应结果</p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/7.png">https://raw.gitmirror.com/alonelovely/image/master/postman/7.png</a></p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/8.png">https://raw.gitmirror.com/alonelovely/image/master/postman/8.png</a></p><p>按照上面创建的一个响应结果，把后面两个也创建完成</p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/9.png">https://raw.gitmirror.com/alonelovely/image/master/postman/9.png</a></p><p>可能会出现上图的情况，如果出现上图情况</p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/10.png">https://raw.gitmirror.com/alonelovely/image/master/postman/10.png</a></p><h5 id="2-对username-password进行参数化"><a href="#2-对username-password进行参数化" class="headerlink" title="2.对username,password进行参数化"></a>2.对username,password进行参数化</h5><p>创建一个JSON文件：</p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/11.png">https://raw.gitmirror.com/alonelovely/image/master/postman/11.png</a></p><h5 id="3-进行关联"><a href="#3-进行关联" class="headerlink" title="3.进行关联"></a>3.进行关联</h5><p>需要把参数的值与文件中的数值进行关联：</p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/12.png">https://raw.gitmirror.com/alonelovely/image/master/postman/12.png</a></p><h5 id="4-（可忽略）把Headers中的x-mock-response-name也进行关联"><a href="#4-（可忽略）把Headers中的x-mock-response-name也进行关联" class="headerlink" title="4.（可忽略）把Headers中的x-mock-response-name也进行关联:"></a>4.（可忽略）把Headers中的x-mock-response-name也进行关联:</h5><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/13.png">https://raw.gitmirror.com/alonelovely/image/master/postman/13.png</a></p><h4 id="7-执行Run，在测试集合运行页面设置执行要求，运行次数要求3次，请求间隔时间为500ms，发送请求的data文件导入前面的新建json数据文件"><a href="#7-执行Run，在测试集合运行页面设置执行要求，运行次数要求3次，请求间隔时间为500ms，发送请求的data文件导入前面的新建json数据文件" class="headerlink" title="7.执行Run，在测试集合运行页面设置执行要求，运行次数要求3次，请求间隔时间为500ms，发送请求的data文件导入前面的新建json数据文件"></a>7.执行Run，在测试集合运行页面设置执行要求，运行次数要求3次，请求间隔时间为500ms，发送请求的data文件导入前面的新建json数据文件</h4><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/14.png">https://raw.gitmirror.com/alonelovely/image/master/postman/14.png</a></p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/15.png">https://raw.gitmirror.com/alonelovely/image/master/postman/15.png</a></p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/16.png">https://raw.gitmirror.com/alonelovely/image/master/postman/16.png</a></p><h4 id="扩展-测试用例集导入json数据后预览数据的截图："><a href="#扩展-测试用例集导入json数据后预览数据的截图：" class="headerlink" title="(扩展)测试用例集导入json数据后预览数据的截图："></a>(扩展)测试用例集导入json数据后预览数据的截图：</h4><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/17.png">https://raw.gitmirror.com/alonelovely/image/master/postman/17.png</a></p><p>效果图：</p><p><a href="https://raw.gitmirror.com/alonelovely/image/master/postman/18.png">https://raw.gitmirror.com/alonelovely/image/master/postman/18.png</a></p><h4 id="题目一结束"><a href="#题目一结束" class="headerlink" title="题目一结束"></a>题目一结束</h4>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
